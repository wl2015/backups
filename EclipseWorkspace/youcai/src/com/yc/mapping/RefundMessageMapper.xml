<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yc.dao.RefundMessageDao">

<!--   MyBatis的核心是其映射文件,SqlMap文件,里面配置了项目中用到了什么SQL语句,和数据库相关的逻辑都在这个映射文件里.顾名思义,
  映射文件就是对Java对象和SQL的映射.这里简单介绍一下映射文件中resultMap的用法:
  resultMap – 它描述如何将结果集映射到Java对象.
  resultMap属性：type为java实体类；id为此resultMap的标识:<resultMap id="BaseResultMap" type="com.test.mybatis.vo.MybatisOrder" >
  resultMap的子元素：
  id – 一般对应到数据库中该行的ID,设置此项可以提高Mybatis性能.
  result – 映射到JavaBean 的某个"简单类型"属性,String,int等.
  association – 映射到JavaBean 的某个"复杂类型"属性,其他JavaBean类.
  collection –复杂类型集合,a collection of complex types -->

 <resultMap id="refundMessage" type="com.yc.bean.RefundMessage">
   <id column="refund_id" property="refundId" javaType="Integer" jdbcType="INTEGER" />
  <result column="order_id" property="orderId" javaType="Integer" jdbcType="INTEGER" />
  <result column="read_flag" property="readFlag" javaType="String" jdbcType="VARCHAR" />
  <result column="money" property="totalmoney" javaType="double" jdbcType="DOUBLE" />
  <result column="u_name" property="userName" javaType="String" jdbcType="VARCHAR" />
  <result column="u_phone" property="userPhone" javaType="String" jdbcType="VARCHAR" />
  <result column="penalty" property="penalty" javaType="float" jdbcType="DOUBLE" />    
   <collection property="dishlist" column="order_id" javaType="ArrayList" ofType="com.yc.bean.DishList" select="com.yc.dao.DishListDao.getDishlistByO_Id"/> 
 </resultMap>
 <insert id="insertMessage"  useGeneratedKeys="true" keyProperty="refundId" parameterType="int">
   insert into refund_message(order_id, read_flag)  values(#{0}, 0);
 </insert>
<!-- 商家查询还未读过的退单消息 -->
<select id="getNotReadRefund" parameterType="int" resultMap="refundMessage">
  select refund_message.refund_id, refund_message.order_id, orders.money, orders.money*0.05 as penalty,
   user.u_name, user.u_phone from refund_message, orders, user where refund_message.order_id = orders.o_id
    and orders.u_id = user.u_id and orders.m_id = #{0} and refund_message.read_flag = 0;
</select>

<!-- 商家确认查看退单信息 -->  
  <update id="flagRefundMessage" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";" > 
       update refund_message 
       <set> read_flag = 1 </set>
       where refund_id = #{item}
    </foreach>
  </update>    
</mapper>