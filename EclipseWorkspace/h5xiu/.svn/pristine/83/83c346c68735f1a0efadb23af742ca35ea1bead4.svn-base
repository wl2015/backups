package com.h5.service.impl;

import java.util.List;

import javax.inject.Inject;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.h5.dao.ModelDao;
import com.h5.entity.Model;
import com.h5.service.ModelService;

@Service
@Transactional
public class ModelServiceImpl implements ModelService {
	
	@Inject
	private ModelDao modelDao;
	
	private static final Logger logger = Logger.getLogger(ModelServiceImpl.class);

	/**
	 * 管理员获取所有模板信息
	 * */
	public List<Model> doGetAllModel() {
		return modelDao.getAllModel();
	}

	/**
	 * 管理员获取该模板的部分信息
	 * */
	public Model doGetModelById(String modelId) {
		Model model = modelDao.getModelById(modelId);
		
		if (!model.getMusicId().equals(null)){
			model.setMusic(modelDao.getMusicById(model.getMusicId()));
			return model;
		}
		return model;
	}

	/**
	 * 管理员编辑模板：获取模板详细信息
	 * */
	public Model doEditModel(String modelId) {
		Model model = modelDao.editModel(modelId);
		
		if (!model.getMusicId().equals(null)){
			model.setMusic(modelDao.getMusicById(model.getMusicId()));
			return model;
		}
		return model;
	}
/****************************逻辑可能存在问题************************************/
	/**
	 * 管理员：保存编辑后的模板
	 * */
	public boolean doSaveModel(Model model) {
		if (model.getMusic() != null){
			return modelDao.saveModel(model) && modelDao.saveMusic(model.getMusic(), model.getId());
		}
		return modelDao.saveModel(model);
	}
	/****************************逻辑可能存在问题************************************/

	/**
	 * 管理员：根据模板id删除模板
	 * */
	public boolean doDeleteModel(String id) {
		
		return modelDao.deleteModel(id);
	}
}
